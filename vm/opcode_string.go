// Code generated by "stringer -type Opcode"; DO NOT EDIT.

package vm

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[OpNop-0]
	_ = x[OpRelJmpFwd-1]
	_ = x[OpRelJmpBwd-2]
	_ = x[OpR8AStore-20]
	_ = x[OpR8BStore-21]
	_ = x[OpR16AStore-22]
	_ = x[OpR16BStore-23]
	_ = x[OpR32AStore-24]
	_ = x[OpR32BStore-25]
	_ = x[OpR8ALoad-26]
	_ = x[OpR8BLoad-27]
	_ = x[OpR16ALoad-28]
	_ = x[OpR16BLoad-29]
	_ = x[OpR32ALoad-30]
	_ = x[OpR32BLoad-31]
	_ = x[OpClearCanvas-40]
	_ = x[OpSetColor-41]
	_ = x[OpSetPixel-42]
	_ = x[OpDrawLine-43]
}

const (
	_Opcode_name_0 = "OpNopOpRelJmpFwdOpRelJmpBwd"
	_Opcode_name_1 = "OpR8AStoreOpR8BStoreOpR16AStoreOpR16BStoreOpR32AStoreOpR32BStoreOpR8ALoadOpR8BLoadOpR16ALoadOpR16BLoadOpR32ALoadOpR32BLoad"
	_Opcode_name_2 = "OpClearCanvasOpSetColorOpSetPixelOpDrawLine"
)

var (
	_Opcode_index_0 = [...]uint8{0, 5, 16, 27}
	_Opcode_index_1 = [...]uint8{0, 10, 20, 31, 42, 53, 64, 73, 82, 92, 102, 112, 122}
	_Opcode_index_2 = [...]uint8{0, 13, 23, 33, 43}
)

func (i Opcode) String() string {
	switch {
	case i <= 2:
		return _Opcode_name_0[_Opcode_index_0[i]:_Opcode_index_0[i+1]]
	case 20 <= i && i <= 31:
		i -= 20
		return _Opcode_name_1[_Opcode_index_1[i]:_Opcode_index_1[i+1]]
	case 40 <= i && i <= 43:
		i -= 40
		return _Opcode_name_2[_Opcode_index_2[i]:_Opcode_index_2[i+1]]
	default:
		return "Opcode(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
